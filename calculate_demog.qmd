---
title: "Calculate Affected Demographics"
format: html
editor: visual
---

In this document, you will calculate station-level PM2.5 changes. Afterward, you will calculate impacted demographic groups around each station.

# Calculating Station-Level Pollution Change

```{r}
library("tidyverse")
library("knitr")
```

Upload your team's full data frame required to estimate the impact of light rails on PM2.5 levels surrounding all stations. Below is a simplified example.

```{r}
df<-read.csv("reg_frame.csv")
```

Run stations level regressions. Use the best regression specification (in your team's opinion) from the average effect calculation.

```{r}
summary(m1<-lm(log(pm25) ~ MetroOpen:as.factor(city_num), data=df))
```

The code below prints out the station-level effect and the p-values

```{r}
len_coef<-length(coef(m1))

#get coefficients of the station-level effect
coef<-coef(m1)[(len_coef-26): len_coef]

#get p values of the station-level effect (p<0.05 is statistically significant)
pval<-summary(m1)$coefficients[,4][(len_coef-3): len_coef]

kable(cbind(coef, pval), digits=2)
```

# Query demographic data

Helpful resource: <https://walker-data.com/tidycensus/articles/basic-usage.html>

Get census key

```{r}
library(tidycensus)
api_key <- "eae61b5628007025f807c7306cd478f1377a238b"
census_api_key(api_key, install=TRUE, overwrite = T)
readRenviron("~/.Renviron")
```

Identify variables that you would like to query

```{r}
vars<-load_variables(year=2010, dataset="sf1", cache = TRUE)
#H001001 Total
#H006002 White
#H006003 Black
#H006004 Native
```

Query variables

```{r}
targetvars<-c("H001001", "H006002", "H006003", "H006004")
race<-get_decennial(year=2010, geography = "block", variables=targetvars, state="AZ", county="Maricopa", output="wide")
```

Rename columns

```{r}
racename<-race %>%
  rename(total=H001001, white=H006002, black=H006003, native=H006004)
```

# Calculate affected demographic group

```{r}
library("terra")
```

```{r}
buff<-vect("buffer.shp")
plot(buff)
```

Download shapefiles from [tigris package](https://github.com/walkerke/tigris)

```{r}
shape<-tigris::blocks(state="AZ", county="Maricopa", class="sp", year=2010)
shapevect<-vect(shape)
shapedf<-as.data.frame(shape)
plot(shapevect)
```

```{r}
blockrace<-merge(shapevect, racename, by.x="GEOID10", by.y="GEOID")

blockrace$blockarea<-expanse(blockrace, unit="m")

blockracedf<-as.data.frame(blockrace)

summary(blockracedf)

#100 percent match
```

Intersect blocks with buffers

```{r}
dem_frame<-data.frame()
```

```{r}
buffdf<-as.data.frame(buff)
buff2 <- subset(buff, buff$FID == 1)
buff2df <- as.data.frame(buff2)
int<-crop(blockrace, buff2)

int$intarea<-expanse(int, unit="m")

intdf<-as.data.frame(int)%>%
  mutate(frac_area=intarea/blockarea) %>%
  mutate(total=total*frac_area, 
         white=white*frac_area, 
         black=black*frac_area, 
         native=native*frac_area)%>%
  summarize(total=sum(total), 
            white=sum(white), 
            black=sum(black), 
            native=sum(native))%>%
  mutate(pct_white=white*100/total, 
         pct_black=black*100/total, 
         pct_native=native*100/total)

dem_frame<-rbind(dem_frame,intdf)
```

Summarize demographic groups that live near light rail stations

```{r}
sum_demog<-intdf %>%
  select(pct_white, pct_native, pct_black)

kable(sum_demog, digits=2)
```

Merge station-level demographic data with station-level pollution reduction data.

Calculate the average emissions that each demographic group sees by using the formula below:

$\dfrac{Hisp_{area1} \times Reduction_{area1} + Hisp_{area2} \times Reduction_{area2}}{Hisp_{area1} + Hisp_{area2}}$
